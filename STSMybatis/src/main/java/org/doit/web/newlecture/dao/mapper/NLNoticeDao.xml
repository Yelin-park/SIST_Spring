<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- mapper에는 DAO를 구현한 인터페이스의 풀네임을 설정 -->
<!-- <mapper namespace="DAO를 구현한 인터페이스의 풀네임"> -->
<mapper namespace="org.doit.web.newlecture.dao.NoticeDao">

<!-- SAMPLE 코드
  <select id="selectBlog" resultType="Blog">
    select * from Blog where id = #{id}
  </select>
   -->
<!-- select태그의 id 값에는 인터페이스의 메서드 이름을 준다 -->   
<!-- 메서드를 호출할 때 넘겨져오는 파라미터 값은 아래와 같이 받아온다. -->
<!-- ${param1} ${param2} -->
<!-- #{param1} #{param2} 전달된 값을 자료형에 맞게 변환시켜줌 -->
<!-- select 태그는 반드시 리턴 타입을 설정해주어야함 -->
 <select id="getCount" resultType="Integer">
     SELECT COUNT(*) CNT  
    FROM NOTICES  
    WHERE ${ param1 } LIKE '%${ param2 }%'
 </select>

<!-- int page, String field, String query == param1 param2 param3 -->
<!--
int srow = 1 + (page - 1) * 15; 
int erow = 15 + (page - 1) * 15;
page 대신 param1을 넣고 연산을 해야하기 때문에 #으로 사용
 -->
<!-- 리턴이 List<Notice> 이기 때문에  resultType Notice 객체를 주는데 풀네임으로 주기 -->
 <select id="getNotices"  resultType="org.doit.web.newlecture.vo.Notice">  
     SELECT * 
       FROM  
                  ( 
                         SELECT ROWNUM NUM, N.*  
                          FROM (  
                                          SELECT *  
                                          FROM NOTICES  
                                          WHERE ${ param2 } LIKE '%${ param3 }%' 
                                      ORDER BY REGDATE DESC 
                                  ) N 
                   ) 
        WHERE NUM BETWEEN 1 + (#{ param1 }-1)*15 AND 15 + (#{ param1 }-1)*15
 </select>

<!-- 매개변수의 이름을 그대로 사용 가능 -->
<!-- 
<delete id="delete">
	DELETE FROM NOTICES
	WHERE SEQ = #{ seq }
</delete> -->

<!-- 매겨변수가 Notice 커맨드 객체이므로 parameterType 설정 후 getter 메서드의 get을 빼고 사용 -->
<!-- 문제점 : 첨부된 파일이 없는 경우에는 FILESRC = :filesrc 코딩할 필요 없음 -->
<!-- MyBatis의 동적SQL을 사용하여 if문으로 파일경로가 null이 아니라면 쿼리가 있도록 수정 -->
<!--  -->
<update id="update" parameterType="org.doit.web.newlecture.vo.Notice">
	UPDATE NOTICES
	SET TITLE = #{ title }, CONTENT = #{ content }
	<if test="filesrc != null">
    , FILESRC = #{ filesrc } 
  	</if>
	WHERE SEQ = #{ seq }
</update>

<!-- XML에서 < 는 태그로 인식하기 때문에 쿼리 그자체로 인식하라고 하기 위해서 <![[CDATA]]> 사용 -->
<select id="getNotice" resultType="org.doit.web.newlecture.vo.Notice">
	<![CDATA[
	SELECT * 
	FROM NOTICES 
	WHERE SEQ=#{ seq }
	]]>
</select>

<!-- insert(Notice notice) 파라미터가 Notice 커맨드 객체인데 parameterType 주지 않아도 상관 없음 -->
<!-- #{filesrc, javaType=String,  jdbcType=VARCHAR} 이 부분은 첨부된 파일이 없을 경우에 에러가 나기때문에 해결하기 위해서 추가한 부분 -->
<insert id="insert">
	<!-- 아래 쿼리가 먼저 실행하고 그 결과 값을  keyProperty 속성으로 seq에 저장 -->
	<selectKey resultType="String" order="BEFORE" keyProperty="seq">
		SELECT MAX(TO_NUMBER(SEQ))+1
		FROM NOTICES
	</selectKey>
	<!-- 아래 쿼리에서 #{seq}는 위에서 실행된 쿼리의 결과 -->
	INSERT INTO NOTICES
	(SEQ, TITLE, CONTENT, WRITER, REGDATE, HIT, FILESRC)
	VALUES
	(#{ seq },  #{ title }, #{ content } , #{ writer  }, SYSDATE, 0, #{filesrc, javaType=String,  jdbcType=VARCHAR} )
</insert>

<update id="hitUp">
	UPDATE notices
	SET hit = hit + 1
	WHERE seq = #{ seq }
</update>
<select id="getHit">
	SELECT hit
	FROM notices
	WHERE seq = #{ seq }
</select>
</mapper>